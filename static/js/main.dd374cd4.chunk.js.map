{"version":3,"sources":["Component/Filter/Filter.module.css","Component/ContactList/Listcontact.module.css","redux/contactAction.js","redux/contactReducer.js","redux/storePhone.js","redux/operationContacts.js","Component/Form/formEditor.js","redux/contactSelector.js","Component/ContactList/ListContact.js","Component/Filter/Filter.js","App.js","index.js","Component/Form/Form.module.css"],"names":["module","exports","addContactRecuest","createAction","addContactSuccess","addContactError","fetchContactRecuest","fetchContactSuccess","fetchContactError","deleteContactRecuest","deleteContactSuccess","deleteContactError","filterContact","itemContacts","createReducer","contactAction","state","payload","prevContactNumber","some","e","number","name","alert","filter","contact","id","loading","combineReducers","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","allContacts","contactReducer","middleware","axios","defaults","baseURL","addContacts","dispatch","post","then","response","data","catch","error","fetchContacts","get","console","log","deleteContacts","delete","Form","handelInputChange","preventDefault","setState","target","value","handelSubmit","evt","props","onhandleAddContact","this","className","style","formStyle","formStyleTitle","formStyleFormInput","onSubmit","type","onChange","placeholder","autoFocus","formStyleFormButton","Component","connect","operationContacts","getitemContacts","getFilter","getLoading","getVisibleContact","createSelector","contacts","toLowerCase","includes","mapDispatchToProps","onDeleteContact","operationContact","contactSelector","map","ListContactItem","buttonDeleteContact","onClick","mapDispatchtoProps","filterTitle","filterInput","App","onFetchContact","isLoadingContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd374cd4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2XuPd\",\"filterInput\":\"Filter_filterInput__1ByQr\",\"filterTitle\":\"Filter_filterTitle__10kzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListContactItem\":\"Listcontact_ListContactItem__3zi4V\",\"buttonDeleteContact\":\"Listcontact_buttonDeleteContact__3rQcF\"};","// import uuid from \"react-uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRecuest = createAction(\"contact/addRecuest\");\r\nconst addContactSuccess = createAction(\"contact/addSuccess\");\r\nconst addContactError = createAction(\"contact/addError\");\r\n\r\nconst fetchContactRecuest = createAction(\"contact/fetchRecuest\");\r\nconst fetchContactSuccess = createAction(\"contact/fetchSuccess\");\r\nconst fetchContactError = createAction(\"contact/fetchError\");\r\n\r\nconst deleteContactRecuest = createAction(\"contact/deleteContactRecuest\");\r\nconst deleteContactSuccess = createAction(\"contact/deleteContactSuccess\");\r\nconst deleteContactError = createAction(\"contact/deleteContactError\");\r\n\r\n\r\n\r\nconst filterContact = createAction(\"contact/filter\");\r\n\r\nexport default {\r\n  // addContact,\r\n  // deleteContact,\r\n  filterContact,\r\n  addContactRecuest,\r\n  addContactSuccess,\r\n  fetchContactSuccess,\r\n  fetchContactRecuest,\r\n  fetchContactError,\r\n  deleteContactRecuest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  addContactError,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport contactAction from \"./contactAction\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst initialСontacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst addContact = (state, { payload }) => {\r\n  const prevContactNumber = state.some(\r\n    (e) => e.number === payload.number\r\n  );\r\n  if (\r\n    !prevContactNumber &&\r\n    payload.name &&\r\n    payload.number\r\n  )\r\n    return [...state, payload];\r\n  if (prevContactNumber) {\r\n    alert(\"такий контакт вже є\");\r\n  }\r\n  if (payload.name === \"\" || payload.number === \"\") {\r\n    alert(\"внесить данні\"); \r\n  }\r\n  return state;\r\n};\r\n\r\nconst deleteContact = (state, { payload }) => {\r\n  return state.filter((contact) => contact.id !== payload);\r\n};\r\n\r\nconst itemContacts = createReducer( [], {\r\n  [contactAction.fetchContactSuccess]:(state, {payload}) => payload ,\r\n  [contactAction.addContactSuccess]: addContact,\r\n  [contactAction.deleteContactSuccess]: deleteContact,\r\n});\r\n\r\nconst loading = createReducer (false, {\r\n  [contactAction.fetchContactRecuest]:() => true,\r\n  [contactAction.addContactRecuest]:() => true,\r\n  [contactAction.deleteContactRecuest]:() => true,\r\n  [contactAction.fetchContactSuccess]:() => false,\r\n  [contactAction.addContactSuccess]:() => false,\r\n  [contactAction.deleteContactSuccess]:() => false,\r\n  [contactAction.fetchContactError]:() => false,\r\n  [contactAction.addContactError]:() => false,\r\n  [contactAction.deleteContactError]:() => false,\r\n})\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactAction.filterContact]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  itemContacts,\r\n  filter,\r\n  loading\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactReducer from \"./contactReducer\";\r\n\r\nconst defaultMiddleware = getDefaultMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    allContacts: contactReducer,\r\n  },\r\n  middleware: [...defaultMiddleware],\r\n});\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport contactAction from \"./contactAction\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4000\"\r\n\r\nconst addContacts = (name, number) => (dispatch) => {\r\n  dispatch(contactAction.addContactRecuest());\r\n  axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then((response) => {\r\n      dispatch(contactAction.addContactSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(contactAction.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactAction.fetchContactRecuest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      dispatch(contactAction.fetchContactSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(contactAction.fetchContactError(error)));\r\n};\r\n\r\nconst deleteContacts = (id) => (dispatch) => {\r\n  dispatch(contactAction.deleteContactRecuest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactAction.deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(contactAction.deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContacts,\r\n  fetchContacts,\r\n  deleteContacts,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport operationContacts from \"../../redux/operationContacts\";\r\nimport style from \"./Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handelInputChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handelSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    this.props.onhandleAddContact(this.state.name, this.state.number);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <div className={style.formStyle}>\r\n        <h2 className={style.formStyleTitle}>Phonebook</h2>\r\n        <form className={style.formStyleFormInput} onSubmit={this.handelSubmit}>\r\n          <label>\r\n            Name\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handelInputChange}\r\n              placeholder=\"Add name\"\r\n              autoFocus\r\n            ></input>\r\n            <br />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handelInputChange}\r\n              placeholder=\"Add number\"\r\n              autoFocus\r\n            ></input>\r\n          </label>\r\n          <br />\r\n          <button className={style.formStyleFormButton} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onhandleAddContact: (name, number) =>\r\n      dispatch(operationContacts.addContacts(name, number)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import {createSelector} from \"@reduxjs/toolkit\"\r\n\r\n\r\nconst getitemContacts = (state) => state.allContacts.itemContacts;\r\nconst getFilter = (state) => state.allContacts.filter;\r\n const getLoading = (state) => state.allContacts.loading;\r\n\r\n const getVisibleContact = createSelector ([getitemContacts, getFilter], (contacts, filter ) => {\r\n    const visibleContact = contacts.filter((contact) => {\r\n        const str = contact.name.toLowerCase();\r\n        return str.includes(filter.toLowerCase());\r\n      });\r\n      return visibleContact;\r\n })\r\n\r\n\r\n\r\nexport default {\r\n    getitemContacts,\r\n    getFilter,\r\n    getLoading,\r\n    getVisibleContact\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport operationContact from \"../../redux/operationContacts\";\r\nimport contactSelector from \"../../redux/contactSelector\"\r\n\r\nimport style from \"./Listcontact.module.css\";\r\nimport \"./ListContactAnimation.css\";\r\n\r\nfunction ListContact({ contact, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      \r\n      {contact.map(({ id, name, number }) => (\r\n        <li key={id} className={style.ListContactItem}>\r\n          <span>{name}:</span>\r\n          <span>{number}</span>\r\n\r\n          <button\r\n            className={style.buttonDeleteContact}\r\n            onClick={() => onDeleteContact(id)}\r\n          ></button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contact: contactSelector.getVisibleContact(state)\r\n\r\n})\r\nconst mapDispatchToProps = {\r\n   \r\n  onDeleteContact: operationContact.deleteContacts,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContact);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactAction from \"../../redux/contactAction\"\r\nimport contactSelector from \"../../redux/contactSelector\"\r\n\r\nimport style from \"./Filter.module.css\"\r\n\r\n function Filter({value, onChange}) {\r\n   \r\n  return (\r\n    <form className = {style.filter}>\r\n      <h2 className = {style.filterTitle}>Find contacts by name</h2>\r\n      <input\r\n      className = {style.filterInput\r\n      }\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={e => onChange(e.target.value)}\r\n        \r\n      />\r\n    </form>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  value: contactSelector.getFilter(state)\r\n})\r\nconst mapDispatchtoProps = {\r\n  onChange: contactAction.filterContact\r\n}\r\nexport default connect(mapStateToProps,mapDispatchtoProps)(Filter);","import React, {Component} from  \"react\";\nimport Form from \"./Component/Form/formEditor\";\nimport {connect} from \"react-redux\"\nimport ListContact from \"./Component/ContactList/ListContact\";\nimport Filter from \"./Component/Filter/Filter\";\nimport operationContact from \"./redux/operationContacts\";\nimport contactSelector from \"./redux/contactSelector\"\n\n\n\nclass App extends Component{\n\n  componentDidMount(){\n    \n    this.props.onFetchContact()\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        {this.props.isLoadingContacts && <h1>LOADING ...</h1>}\n        <Form />\n        <Filter />\n        <ListContact />\n      </div>\n    );\n\n  }\n  \n    \n\n  \n  \n}\nconst mapStateToProps = state => ({\nisLoadingContacts: contactSelector.getLoading(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchContact:() => dispatch(operationContact.fetchContacts()) ,\n});\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\"\n\nimport store from \"./redux/storePhone\"\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}>\n    <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"Form_formStyle__2sFE-\",\"formStyleTitle\":\"Form_formStyleTitle__3yhRj\",\"formStyleFormInput\":\"Form_formStyleFormInput__oGjRj\",\"formStyleFormButton\":\"Form_formStyleFormButton__VZg1j\"};"],"sourceRoot":""}